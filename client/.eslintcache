[{"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Login.js":"1","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Register.js":"2","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Plants.js":"3","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Cart.js":"4","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Home.js":"5","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\App.js":"6","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\components\\slideshow\\index.js":"7","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\components\\linkCard\\index.js":"8","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\utils\\API.js":"9","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\components\\links\\index.js":"10","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\components\\CardData\\index.js":"11","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\IndividualPlant.js":"12","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\components\\Nav\\index.js":"13","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\index.js":"14","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\store.js":"15","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\reducers\\index.js":"16","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\actions\\types.js":"17","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\reducers\\errorReducers.js":"18","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\actions\\authActions.js":"19","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\reducers\\authReducers.js":"20","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\utils\\setAuthToken.js":"21","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\components\\TableData\\index.js":"22","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\actions\\PlantsActions.js":"23","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\reducers\\PlantReducers.js":"24","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\components\\Footer\\index.js":"25","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\AdminLogin.js":"26","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\components\\login\\index.js":"27","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Admin.js":"28"},{"size":4198,"mtime":1612532414772,"results":"29","hashOfConfig":"30"},{"size":5125,"mtime":1611208369134,"results":"31","hashOfConfig":"30"},{"size":1409,"mtime":1612530919657,"results":"32","hashOfConfig":"30"},{"size":3214,"mtime":1611748263801,"results":"33","hashOfConfig":"30"},{"size":252,"mtime":1610943673122,"results":"34","hashOfConfig":"30"},{"size":2661,"mtime":1612527077904,"results":"35","hashOfConfig":"30"},{"size":1144,"mtime":1611289028235,"results":"36","hashOfConfig":"30"},{"size":718,"mtime":1612530012782,"results":"37","hashOfConfig":"30"},{"size":1464,"mtime":1612453259490,"results":"38","hashOfConfig":"30"},{"size":1376,"mtime":1612443324755,"results":"39","hashOfConfig":"30"},{"size":536,"mtime":1612529098403,"results":"40","hashOfConfig":"30"},{"size":6353,"mtime":1612485846730,"results":"41","hashOfConfig":"30"},{"size":3961,"mtime":1612529736395,"results":"42","hashOfConfig":"30"},{"size":203,"mtime":1612527202694,"results":"43","hashOfConfig":"30"},{"size":444,"mtime":1612497942865,"results":"44","hashOfConfig":"30"},{"size":550,"mtime":1612498240060,"results":"45","hashOfConfig":"30"},{"size":335,"mtime":1611588591973,"results":"46","hashOfConfig":"30"},{"size":250,"mtime":1611205781617,"results":"47","hashOfConfig":"30"},{"size":4265,"mtime":1612488383293,"results":"48","hashOfConfig":"30"},{"size":1701,"mtime":1612059248285,"results":"49","hashOfConfig":"30"},{"size":338,"mtime":1611206406888,"results":"50","hashOfConfig":"30"},{"size":1838,"mtime":1611551212726,"results":"51","hashOfConfig":"30"},{"size":1400,"mtime":1612457612364,"results":"52","hashOfConfig":"30"},{"size":375,"mtime":1612457322846,"results":"53","hashOfConfig":"30"},{"size":1348,"mtime":1611573814309,"results":"54","hashOfConfig":"30"},{"size":5041,"mtime":1612532363248,"results":"55","hashOfConfig":"30"},{"size":5864,"mtime":1612482477308,"results":"56","hashOfConfig":"30"},{"size":13974,"mtime":1612496915996,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"1v47yc4",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Login.js",["132"],"import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser,logoutUser } from \"./../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport { confirmAlert} from 'react-confirm-alert'; // Import\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n      status: \"you are not logged in\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      alert(\"you are already logged in!!\")\r\n      this.props.history.push(\"/plants\")\r\n    }\r\n  }\r\n\r\n  \r\ncomponentWillReceiveProps(nextProps) {\r\n \r\n    if (nextProps.auth.isAuthenticated) {\r\n        console.log(\"new login props\", nextProps)\r\n      this.props.history.push(\"/plants\"); // push user to plants when they login\r\n    }\r\nif (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }}\r\nonChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\nonSubmit = e => {\r\n    e.preventDefault();\r\nconst userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\nthis.props.loginUser(userData,this.props.admin); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n  \r\n};\r\nrender() {\r\n    const { errors } = this.state;\r\nreturn (\r\n      <div className=\"container\">\r\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n          <div className=\"col\">\r\n            <Link to=\"/\" >\r\n              Back to\r\n              home\r\n            </Link>\r\n            <div className=\"col\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Login</b> below\r\n              </h4>\r\n              { !this.props.admin && (<p className=\"grey-text text-darken-1\">\r\n                Don't have an account? <Link to=\"/register\">Register</Link>\r\n              </p>)}\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"col\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.email || errors.emailnotfound\r\n                  })}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <span >\r\n                  {errors.email}\r\n                  {errors.emailnotfound}\r\n                </span>\r\n              </div>\r\n              <div className=\" col \">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password || errors.passwordincorrect\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <span >\r\n                  {errors.password}\r\n                  {errors.passwordincorrect}\r\n                </span>\r\n              </div>\r\n              <div className=\"col\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  \r\n                >\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n\r\n  \r\n});\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  { loginUser, logoutUser }\r\n)(Login));","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Register.js",[],["133","134"],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Plants.js",["135","136","137","138"],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Cart.js",["139","140","141","142","143","144"],"\r\nimport API from \"../utils/API\";\r\nimport React, { useEffect, Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport TableData from \"../components/TableData\";\r\nimport { loginUser } from \"./../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\"\r\nimport { connect } from \"react-redux\";\r\nimport \"braintree-web\"\r\nimport axios from \"axios\"\r\nimport DropIn from \"braintree-web-drop-in-react\"\r\n\r\nclass Cart extends Component {\r\nconstructor() {\r\n  super()\r\n  this.state = {clientToken : null}\r\n}\r\n\r\nasync componentDidMount () {\r\n  try {\r\n    // Get a client token for authorization from your server\r\n    const response = await axios.get(\r\n      \"/api/braintree/v1/getToken\"\r\n    )\r\n    const clientToken = response.data.clientToken\r\n\r\n    this.setState({ clientToken })\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  console.log(this.props)\r\nif (this.props.auth.isAuthenticated === true){\r\n  this.setState({status: '', Link:''} )\r\n}\r\nelse {this.setState({status:'You must be logged in to view your cart', Link: <Link className=\"nav-link\" to=\"/login\">Login Now</Link> })}\r\n}\r\nasync buy() {\r\n  try {\r\n\r\n  \r\n    // Send the nonce to your server\r\n    const { nonce } = await this.instance.requestPaymentMethod()\r\n    alert(nonce)\r\n    const response = await axios.post(\r\n      \"/api/braintree/v1/sandbox\",\r\n      nonce\r\n    )\r\n    console.log(response)\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n}\r\n  render() {\r\n    if (!this.state.clientToken) {\r\n      return (\r\n        <div>\r\n          <h1>Loading...</h1>\r\n        </div>)}\r\n        else {\r\n  return (\r\n    <div className=\"container\">\r\n      <div> {this.props.auth.status}{this.props.auth.notLoggedIn}{this.props.auth.link}</div>\r\n      \r\n\r\n    <table className=\"table table-striped\">\r\n    <thead>\r\n      <tr>\r\n       \r\n        <th ><div>Plant</div> <div></div></th>\r\n        \r\n        <th ><div>Quantity</div> <div></div></th>\r\n        <th >Individual Cost</th>\r\n        <th >Individual Cost</th>\r\n        <th></th>\r\n       \r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n    { this.props.auth.cart.map(( plant,index) => (\r\n\r\n          <TableData>{index}\r\n          </TableData>\r\n          \r\n        // cost\r\n        // picture url\r\n        // \r\n        // location = {employee.location.city}\r\n    ))}\r\n    <tr>\r\n    <td></td>\r\n    <td></td>\r\n    <td>total cost</td>\r\n    <td>$ {this.props.auth.cart.reduce((accumulator, currentValue) => accumulator + currentValue.cost*currentValue.number,0)}</td>\r\n    {this.props.auth.isAuthenticated && <td>   <DropIn \r\n            options={{\r\n              authorization: this.state.clientToken,\r\n            }}\r\n            onInstance={instance => (this.instance = instance)}\r\n          />\r\n          <button onClick={this.buy.bind(this)}>Buy</button></td>}\r\n\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n  </div>\r\n  )\r\n  }}\r\n};\r\nCart.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Cart);\r\n","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Home.js",[],["145","146"],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\App.js",[],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\components\\slideshow\\index.js",["147","148","149"],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\components\\linkCard\\index.js",["150"],"import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./link.css\";\r\n\r\nfunction linkCard (props) {\r\n\r\n  \r\n  return(\r\n    \r\n    <div className=\"col-4 text-center\">\r\n        <div className=\"card\">\r\n        <Link to ={props.linkUrl}>\r\n        <img className=\"card-img-top hide\" src={props.picture} alt=\"Card image cap\"></img>\r\n        </Link>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{props.title}</h5>\r\n                    <p className=\"card-text\">{props.content}</p>\r\n                    <Link to={props.linkUrl} className=\"btn btn-primary\">{props.linkText}</Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default linkCard;\r\n","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\utils\\API.js",["151"],"import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all posts\r\n  getPlants: function() {\r\n    return axios.get(\"/api/plants\");\r\n  },\r\n\r\n  addToCart: function(cartdata) {\r\n    return axios.post(\"/api/plants/addtocart\", cartdata);\r\n  },\r\n\r\n  getUser: function(userdata) {\r\n    return axios.post(\"/api/plants/getuser\", userdata);\r\n  },\r\n\r\n  register: function(userdata) {\r\n\r\n    return axios.post(\"/api/users/register\", userdata)\r\n  },\r\n\r\n  login: function(userdata) {\r\n    return axios.post(\"/api/users/login\", userdata)\r\n  },\r\n\r\n  reviseCart: function(userdata, index) {\r\n    return axios.post(\"/api/plants/removefromcart\", userdata)\r\n  },\r\n\r\n  addPlant: function(userdata) {\r\n    return axios.post(\"/api/plants/addplant\", userdata)\r\n  },\r\n\r\n  deletePlant: function(userdata) {\r\n    return axios.post(\"/api/plants/deleteplant\", userdata)\r\n  },\r\n  deactivate: function(userdata) {\r\n    return axios.post(\"/api/plants/deactivateplant\", userdata)\r\n  },\r\n  reactivate: function(userdata) {\r\n    return axios.post(\"/api/plants/reactivateplant\", userdata)\r\n  }\r\n\r\n\r\n  // // Gets the post with the given id\r\n  // getPost: function(id) {\r\n  //   return axios.get(\"/api/posts/\" + id);\r\n  // },\r\n  // // Deletes the post with the given id\r\n  // deletePost: function(id) {\r\n  //   return axios.delete(\"/api/posts/\" + id);\r\n  // },\r\n  // // Saves a post to the database\r\n  // savePost: function(postData) {\r\n  //   return axios.post(\"/api/posts\", postData);\r\n  // }\r\n};\r\n","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\components\\links\\index.js",["152"],"import React, {Component} from \"react\";\r\nimport \"./links.css\"\r\nimport Link from \"../linkCard\";\r\n\r\nclass Links extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            linkUrl: \"/plants\",\r\n            picture: \"button1.jpg\",\r\n            linkText: \"Browse Plants\"}\r\n        }\r\n    \r\n\r\nrender() {\r\n  return (\r\n    <div   >\r\n    \r\n    <div className=\"row height vertical\">\r\n   \r\n          <Link className=\"container text-center\"\r\n\r\n            linkUrl = {this.state.linkUrl}\r\n            linkText={this.state.linkText}\r\n            picture={this.state.picture}\r\n          \r\n          />\r\n          <div className=\"col-7\">\r\n            <h4>Welcome to Green Hills Nursery</h4>\r\n            <h5>We are a plant nursery located in Meadows, SA.</h5>\r\n            <p>We specialize in drought tolerant, hardy perennials and annuals which are suited to our harsh summer\r\n              climate. The gardens have over 100 species of plants  growing and as more plants are propagated, more \r\n              will be added to the site. </p>\r\n              <p>\r\n              To browse our current range, please click on the button to the left.\r\n              To see more pictures of the garden, click on the instgram icon below.\r\n            </p>\r\n\r\n          </div>\r\n\r\n\r\n    \r\n    </div>\r\n  </div>\r\n\r\n   \r\n    \r\n  );\r\n}\r\n}\r\n\r\nexport default Links;\r\n",["153","154"],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\components\\CardData\\index.js",["155"],"import React from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport \"./carddata.css\"\r\n\r\n\r\n\r\nfunction CardData(props) {\r\n\r\n\r\n  return (\r\n<div className=\"col-md-4\">\r\n<Link to={{pathname: `/${props.route}`, data: {}}} >\r\n<div className=\"card\" >\r\n  <img className=\"card-img-top\" style={{width:\"18rem\", height: \"18rem\"}} src={props.url} alt=\"Card image cap\"></img>\r\n  <div className=\"card-body text-center\">\r\n    <h5 className=\"card-title\">{props.name}</h5>\r\n  </div>\r\n</div>\r\n</Link>\r\n</div>\r\n  \r\n  );\r\n}\r\n\r\nexport default CardData;\r\n","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\IndividualPlant.js",["156","157","158","159","160"],"\r\nimport API from \"../utils/API\";\r\nimport React, { useEffect, Component } from \"react\";\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport { getPlants } from \"./../actions/PlantsActions\";\r\nimport \"./IndividualPlant.css\"\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser,updateCart } from \"./../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { confirmAlert} from 'react-confirm-alert'; // Import\r\n\r\nlibrary.add(\r\n    faShoppingCart\r\n  )\r\n  \r\n\r\n\r\nclass IndividualPlant extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {quantity: 1, name: true, plant: ''}\r\n\r\n        //set up state for particular user to check if items in their cart\r\n        \r\n      }\r\n    componentDidMount () {\r\n      if (this.props.plants.plants.length===0){\r\n        API.getPlants()\r\n        .then(res => {\r\n        console.log(\"returned plants\",res.data)\r\n        var plants = res.data\r\n          console.log(plants[0])\r\n        const currentPath = (this.props.location.pathname.split(\"/\").pop()).replace(/%20/g, \" \")\r\n        console.log(currentPath, plants[1].name)\r\n        let index = plants.findIndex( element => {\r\n          if (element.name === currentPath) {\r\n            return true;\r\n          }\r\n        });\r\n         console.log(\"index,\", index)\r\n          this.setState({url: res.data[index].url})\r\n          this.setState({name: res.data[index].name})\r\n          this.setState({description: res.data[index].description})\r\n          this.setState({cost: res.data[index].cost})\r\n    \r\n      })\r\n     \r\n\r\n      }\r\n      else {\r\n      const currentPath = (this.props.location.pathname.split(\"/\").pop()).replace(/%20/g, \" \")\r\n        let index = this.props.plants.plants.findIndex( element => {\r\n            if (element.name === currentPath) {\r\n              return true;\r\n            }\r\n          });\r\n          console.log(this.props.plants.plants)\r\n          console.log(currentPath)\r\n          console.log(index)\r\n        this.setState({url: this.props.plants.plants[index].url})\r\n        this.setState({name: this.props.plants.plants[index].name})\r\n        this.setState({description: this.props.plants.plants[index].description})\r\n        this.setState({cost: this.props.plants.plants[index].cost})\r\n\r\n        } \r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        console.log(event.target.value)\r\n        this.setState({quantity: event.target.value})\r\n  \r\n    }\r\n\r\n    addToCart = () => {\r\n\r\n        //add plant name, quantity, user to state in cart and send to database via an API call. \r\n        console.log(\"auth\",this.props.auth.decoded)\r\n        if (this.props.auth.decoded === undefined || this.props.auth.decoded === \"\") {\r\n          confirmAlert({\r\n            title: ' Login',\r\n            message: 'You must login to add to cart',\r\n            buttons: [\r\n              {\r\n                label: 'Yes',\r\n                onClick: () => {  this.props.history.push(\"/login\");;\r\n                }\r\n              },\r\n              {\r\n                label: 'No',\r\n                onClick: () => {return}\r\n              }\r\n            ]\r\n          });\r\n\r\n        }\r\n        else {\r\n        if ((this.state.quantity >= 1) && (this.state.quantity !=='' )){\r\n            this.setState({name: false}) \r\n            var timeStamp = Date.now();//the best way to create unique idsI could think of\r\n       \r\n            API.addToCart({\r\n                id: timeStamp,\r\n                user: this.props.auth.decoded.id,\r\n                name: this.props.match.params.id,\r\n                number: this.state.quantity,\r\n                cost: this.state.cost\r\n            }).then(results => {\r\n                console.log(results)\r\n                this.props.updateCart(this.props.auth.decoded.id)\r\n                this.setState({name: true})\r\n            console.log(this.props.auth)\r\n    \r\n    \r\n            })\r\n            \r\n        }\r\n        else {\r\n          confirmAlert({\r\n            title: ' Incorrect value',\r\n            message: 'You must enter a number above zero',\r\n            buttons: [\r\n              {\r\n                label: 'Yes',\r\n                onClick: () => {return}\r\n              },\r\n              {\r\n                label: 'No',\r\n                onClick: () => {return}\r\n              }\r\n            ]\r\n          });\r\n           }}\r\n     \r\n    }\r\n\r\nrender() {\r\n  return <div className=\"container\">\r\n  \r\n<div style={{height: \"5vh\"}}></div>\r\n  <div className=\"card\">\r\n        <div className=\"row no-gutters\">\r\n            <div className=\"col-auto\">\r\n                <img style={{width: \"50vh\", height: \"50vh\"}} src={`/${this.state.url}`} className=\"img-fluid\" alt=\"\"></img>\r\n            </div>\r\n            <div className=\"col\">\r\n                <div className=\"card-block px-2\">\r\n                    <h4 className=\"card-title\">{this.state.name}</h4>\r\n                   \r\n                    <p>Price: ${this.state.cost}</p>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\"><span className=\"padding-right\">Quantity: </span><input default={1} type=\"Number\" onChange={this.handleInputChange} placeholder=\"1\"></input></div>\r\n                        <div className=\"col-6 text-large\"><button disabled={!this.state.name} onClick={this.addToCart} className=\"padding-cart\">Add to Cart: <FontAwesomeIcon icon={faShoppingCart} /> </button></div>\r\n                    </div>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <p className=\"card-text\">{this.state.description} </p>\r\n                   <p></p>\r\n                   <Link className=\"bottom-right\" to=\"/plants\">Go Back</Link>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n       \r\n  </div>\r\n    </div>\r\n\r\n}\r\n};\r\n\r\nIndividualPlant.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n  };\r\n  const mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors,\r\n    plants: state.plants\r\n  });\r\n  export default connect(\r\n    mapStateToProps,\r\n    { loginUser, updateCart, getPlants }\r\n  )(IndividualPlant);\r\n  \r\n",["161","162"],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\components\\Nav\\index.js",["163","164","165","166","167","168","169","170"],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\index.js",[],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\store.js",["171"],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\reducers\\index.js",[],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\actions\\types.js",[],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\reducers\\errorReducers.js",["172"],"import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}",["173","174"],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\actions\\authActions.js",["175"],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\reducers\\authReducers.js",["176"],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\utils\\setAuthToken.js",[],["177","178"],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\components\\TableData\\index.js",[],["179","180"],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\actions\\PlantsActions.js",[],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\reducers\\PlantReducers.js",["181"],"import { PLANTS } from \"../actions/types\";\r\nconst initialState = {\r\n  plants:[],\r\n  inactivePlants:[]\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case PLANTS:\r\n    console.log(\"type called\")  \r\n    \r\n    return {\r\n      plants: action.plants,\r\n      inactivePlants: action.inactivePlants}\r\n    default:\r\n   return state\r\n  }\r\n}","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\components\\Footer\\index.js",["182"],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\AdminLogin.js",[],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\components\\login\\index.js",[],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Admin.js",["183","184","185","186","187","188"],"import React, {useEffect, useState} from \"react\";\r\nimport { useSelector } from 'react-redux' \r\nimport { connect } from \"react-redux\";\r\nimport { loginUser, logoutUser } from \"./../actions/authActions\";\r\nimport { getPlants } from \"./../actions/PlantsActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport API from \"../utils/API\";\r\nimport { confirmAlert} from 'react-confirm-alert'; // Import\r\nimport Select from 'react-select';\r\n\r\nfunction Admin () {\r\n  const history = useHistory()\r\n  const usertype = localStorage.getItem(\"usertype\")\r\n  console.log(localStorage.getItem(\"logging out\"))\r\n  if(!localStorage.getItem(\"logging out\")) {\r\n  if (usertype !== \"admin\"){\r\n    history.push(\"/adminlogin\")\r\n    confirmAlert({\r\n      title: 'Restricted',\r\n      message: 'you are not logged in as a admin',\r\n      buttons: [\r\n        {\r\n          label: 'Ok',\r\n          onClick: () => {\r\n            return}\r\n        }\r\n      ]\r\n    });\r\n  }}\r\n  else {\r\n    localStorage.removeItem(\"logging out\")\r\n    history.push(\"/plants\")\r\n  }\r\n  const [showAddPlantState, addPlantFunction] = useState(false);\r\n  const [showDeletePlantState, deletePlantFunction] = useState(false);\r\n  const [showRemoveUserState, removeUserFunction] = useState(false);\r\n\r\n  const [showDeactivateState, showDeactivateFunction] = useState(false);\r\n  const [showActivateState, showActivateFunction] = useState(false);\r\n  const selectedOption=''\r\n  const [optionsToDelete, setOptionsToDelete] = useState('');\r\n  \r\n  const [plantName, setPlantName] = useState('');\r\n  const [plantList, updateAvailability] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [cost, setCost] = useState('');\r\n    const [flowerSeason, setFlowerSeason] = useState('summer');\r\n    const [url, setUrl] = useState('');\r\n    const [deactivated, setDeactivated] = useState([]);\r\n    \r\n  const store = useSelector(store => store)\r\n\r\n\r\n\r\nuseEffect(() => {\r\n\r\nconsole.log(\"after the update\", store)\r\n\r\n}, \r\n[store]);\r\nlet options = [];\r\nconsole.log(store.plants)\r\nstore.plants.plants.map(item =>\r\n  options.push({label: item.name, value: item.id} ),\r\n);\r\nlet inactiveOptions = []\r\nstore.plants.inactivePlants.map(item =>\r\n  inactiveOptions.push({label: item.name, value: item.id} ),\r\n);\r\nconsole.log(\"options\",options)\r\n\r\n\r\n \r\n\r\n// API.getPlants()\r\n//         .then(res => {\r\n//           const plantsShown = res.data.filter(item => item.show === false);\r\n\r\n\r\n//           const sortedPlants = plantsShown.sort(function(a, b) {\r\n//             var nameA = a.name.toUpperCase(); // ignore upper and lowercase\r\n//             var nameB = b.name.toUpperCase(); // ignore upper and lowercase\r\n//             if (nameA < nameB) {\r\n//               return -1; //nameA comes first\r\n//             }\r\n//             if (nameA > nameB) {\r\n//               return 1; // nameB comes first\r\n//             }\r\n//             return 0;  // names must be equal\r\n\r\n//         })\r\n// // const reactivateOptions = sortedPlants.map(item =>\r\n// //   sortedPlants.push({label: item.name, value: item.id} ),\r\n// //);\r\n      \r\n    \r\n//         console.log(options)\r\n      \r\n//       })\r\nconst show = (event) => {\r\n  \r\n  switch (event.target.id) {\r\n    case \"addPlant\":\r\n     addPlantFunction(!showAddPlantState)\r\n     setPlantName('')\r\n     setDescription('')\r\n     setCost('')\r\n     setUrl('')\r\n     deletePlantFunction(false)\r\n     removeUserFunction(false)\r\n     showDeactivateFunction(false)\r\n     showActivateFunction(false)\r\n\r\n      break;\r\n    case \"deletePlant\":\r\n      addPlantFunction(false)\r\n      deletePlantFunction(!showDeletePlantState)\r\n      removeUserFunction(false)\r\n      showDeactivateFunction(false)\r\n     showActivateFunction(false)\r\n      break;\r\n    case \"removeUser\":\r\n      addPlantFunction(false)\r\n      deletePlantFunction(false)\r\n      removeUserFunction(!showRemoveUserState)\r\n      showDeactivateFunction(false)\r\n     showActivateFunction(false)\r\n      break;\r\n      case \"activatePlant\":\r\n        addPlantFunction(false)\r\n        deletePlantFunction(false)\r\n        removeUserFunction(false)\r\n        showDeactivateFunction(false)\r\n       showActivateFunction(!showActivateState)\r\n        break;\r\n        case \"deactivatePlant\":\r\n          addPlantFunction(false)\r\n          deletePlantFunction(false)\r\n          removeUserFunction(false)\r\n          showDeactivateFunction(!showDeactivateState)\r\n         showActivateFunction(false)\r\n          break;\r\n    \r\n  }\r\n\r\n}\r\n\r\n  \t\r\n\r\n    const handleSubmit= (e) => {\r\n      console.log(plantName, description, cost)\r\n      e.preventDefault();\r\n      if (plantName ==='' || description ==='' || cost ===''){\r\n        console.log(plantName, description, cost)\r\n        confirmAlert({\r\n          title: 'Incorrect Details',\r\n          message: 'you have not entered all plant properties',\r\n          buttons: [\r\n            {\r\n              label: 'Ok',\r\n              onClick: () => {return}\r\n            }\r\n          ]\r\n        });\r\n      }\r\n      else {\r\n      confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n          return (\r\n            <div className='custom-ui'>\r\n              <h1>Confirm Plant Details</h1>\r\n              <p>plant name: {plantName}</p>\r\n              <p>flower colour: {description}</p>\r\n              <p>cost: {cost}</p>\r\n              <p>flower season: {flowerSeason}</p>\r\n              <p>photoName: {url}</p>\r\n             \r\n              <button onClick={onClose}>No</button>\r\n              <button\r\n                onClick={() => {\r\n                  const userdata ={\r\n                    \"plantName\": plantName,\r\n                    \"description\": description,\r\n                    \"cost\": cost,\r\n                    \"flowerSeason\": flowerSeason,\r\n                    \"url\": url,\r\n                    \"id\": Date.now()\r\n                  }\r\n                 API.addPlant(userdata).then((result)=> {\r\n                  console.log(result)\r\n                  onClose()\r\n                  addPlantFunction(false)\r\n                  confirmAlert({\r\n                    title: 'Success!',\r\n                    message: 'you have successfully added a plant',\r\n                    buttons: [\r\n                      {\r\n                        label: 'Ok',\r\n                        onClick: () => \r\n                        {window.location.reload()\r\n                          return}\r\n                      }\r\n                    ]\r\n                  });\r\n                 })\r\n                 \r\n                }}\r\n              >\r\n                Yes\r\n              </button>\r\n            </div>\r\n          );\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n\r\n    }\r\n\r\n const handleUpdate= selectedOption => {\r\n\r\nsetOptionsToDelete(selectedOption)\r\n\r\n\r\n\r\n\r\n }\r\n\r\n const removePlant = () => {\r\n \r\n  confirmAlert({\r\n    title: 'Confirm',\r\n    message: 'Are you sure you want to delete a plant.',\r\n    buttons: [\r\n      {\r\n        label: 'Ok',\r\n        onClick: () => \r\n        {\r\n          const name = optionsToDelete.map(element =>{ return element.label})\r\n      \r\n          API.deletePlant({\"array\": name}).then((result)=> {\r\n            console.log(result)\r\n            \r\n            deletePlantFunction(false)\r\n            confirmAlert({\r\n              title: 'Success!',\r\n              message: 'you have successfully deleted a plant',\r\n              buttons: [\r\n                {\r\n                  label: 'Ok',\r\n                  onClick: () => \r\n                  {\r\n                    window.location.reload()\r\n                    return}\r\n                }\r\n              ]\r\n            });\r\n           })\r\n          \r\n         }\r\n      },\r\n      {label: 'Cancel',\r\n      onClick: () => {return}}\r\n    ]\r\n  });\r\n}\r\n\r\nconst deactivatePlant = () => {\r\n \r\n  confirmAlert({\r\n    title: 'Confirm',\r\n    message: 'Are you sure you want to deactivate plants.',\r\n    buttons: [\r\n      {\r\n        label: 'Ok',\r\n        onClick: () => \r\n        {\r\n          const name = optionsToDelete.map(element =>{ return element.label})\r\n      \r\n          API.deactivate({\"array\": name}).then((result)=> {\r\n            console.log(result)\r\n            \r\n            showDeactivateFunction(false)\r\n            confirmAlert({\r\n              title: 'Success!',\r\n              message: 'you have deactivated plants',\r\n              buttons: [\r\n                {\r\n                  label: 'Ok',\r\n                  onClick: () => \r\n                  {\r\n                    window.location.reload()\r\n                    return}\r\n                }\r\n              ]\r\n            });\r\n           })\r\n          \r\n         }\r\n      },\r\n      {label: 'Cancel',\r\n      onClick: () => {return}}\r\n    ]\r\n  });\r\n}\r\n\r\nconst reActivatePlant = () => {\r\n \r\n  confirmAlert({\r\n    title: 'Confirm',\r\n    message: 'Are you sure you want to reactivate these plants.',\r\n    buttons: [\r\n      {\r\n        label: 'Ok',\r\n        onClick: () => \r\n        {\r\n          const name = optionsToDelete.map(element =>{ return element.label})\r\n      \r\n          API.reactivate({\"array\": name}).then((result)=> {\r\n            console.log(result)\r\n            \r\n            showActivateFunction(false)\r\n            confirmAlert({\r\n              title: 'Success!',\r\n              message: 'you have successfully reactivated these plants!',\r\n              buttons: [\r\n                {\r\n                  label: 'Ok',\r\n                  onClick: () => \r\n                  {\r\n                    window.location.reload()\r\n                    return}\r\n                }\r\n              ]\r\n            });\r\n           })\r\n          \r\n         }\r\n      },\r\n      {label: 'Cancel',\r\n      onClick: () => {return}}\r\n    ]\r\n  });\r\n}\r\n  return (\r\n    <div className=\"container\" >\r\n      <h2 className=\"text-center\">Admin Actions</h2>\r\n      <button id=\"addPlant\" onClick={show} className=\"row mt-4\"style={{width:\"100%\", fontSize:\"large\"}}> Click here to add a plant</button>\r\n      {showAddPlantState && <div> \r\n        <form onSubmit={e => { handleSubmit(e) }}>\r\n        <div className=\"row mt-2\">\r\n        <label className=\"col-3\">Plant Name:</label>\r\n        <br />\r\n        <input className=\"col-3\"\r\n          name='plantName' \r\n          type='text'\r\n          value={plantName}\r\n          onChange={e => setPlantName(e.target.value)}\r\n        />\r\n        </div>\r\n        <div className=\"row mt-2\">\r\n        <label className=\"col-3\">Description:</label>\r\n        <br />\r\n        <input className=\"col-3\"\r\n          name='description' \r\n          type='text'\r\n          value={description}\r\n          onChange={e => setDescription(e.target.value)}\r\n        />\r\n        </div>\r\n        <div className=\"row mt-2\">\r\n        <label className=\"col-3\">Cost:</label>\r\n        <br />\r\n        <input className=\"col-3\"\r\n          name='cost' \r\n          type='number'\r\n          value={cost}\r\n          onChange={e => setCost(e.target.value)}\r\n        />\r\n        </div>\r\n        <div className=\"row mt-2\">\r\n        <label className=\"col-3\">Name of Photo in public folder:</label>\r\n        <br />\r\n        <input className=\"col-3\"\r\n          name='url' \r\n          type='text'\r\n          value={url}\r\n          onChange={e => setUrl(e.target.value)}\r\n        />\r\n        </div>\r\n        <div className=\"row mt-2\">\r\n        <label className=\"col-3\">Flower Season:</label>\r\n        <br />\r\n        <select value={flowerSeason} onChange={e => setFlowerSeason(e.target.value)}>\r\n            <option value=\"summer\">summer</option>\r\n            <option value=\"autumn\">autumn</option>\r\n            <option value=\"winter\">winter</option>\r\n            <option value=\"spring\">spring</option>\r\n          </select>\r\n        </div>\r\n        <input \r\n          type='submit' \r\n          value='Add Plant' \r\n        />\r\n      </form>\r\n        \r\n        </div>}\r\n      <button id=\"deletePlant\" onClick={show} className=\"row mt-4\"style={{width:\"100%\", fontSize:\"large\"}}>Click here to remove a plant</button>\r\n      {showDeletePlantState && <div>\r\n      <div className=\"row mt-2\">\r\n        <label className=\"col-5 text-center my-auto\"><h5>Select Plants to Remove from Sale:</h5></label>\r\n        <br />\r\n        <Select className=\"col-4\" options={options} isMulti  onChange={handleUpdate}/>\r\n        <input className=\"col-2\" \r\n          type='submit' \r\n          value='Remove Plant' \r\n          onClick={removePlant}\r\n        />\r\n        </div>\r\n      \r\n        </div>}\r\n\r\n        <button id=\"deactivatePlant\" onClick={show} className=\"row mt-4\"style={{width:\"100%\", fontSize:\"large\"}}>Click here to deactivate plants</button>\r\n      {showDeactivateState && <div>\r\n      <div className=\"row mt-2\">\r\n        <label className=\"col-5 text-center my-auto\"><h5>Select Plants to Deactivate:</h5></label>\r\n        <br />\r\n        <Select className=\"col-4\" options={options} isMulti  onChange={handleUpdate}/>\r\n        <input className=\"col-2\" \r\n          type='submit' \r\n          value='Deactivate' \r\n          onClick={deactivatePlant}\r\n        />\r\n        </div>\r\n      \r\n        </div>}\r\n\r\n        <button id=\"activatePlant\" onClick={show} className=\"row mt-4\"style={{width:\"100%\", fontSize:\"large\"}}>Click here to reactivate plants</button>\r\n      {showActivateState && <div>\r\n      <div className=\"row mt-2\">\r\n        <label className=\"col-5 text-center my-auto\"><h5>Select Plants to reactivate:</h5></label>\r\n        <br />\r\n        <Select className=\"col-4\" options={inactiveOptions} isMulti  onChange={handleUpdate}/>\r\n        <input className=\"col-2\" \r\n          type='submit' \r\n          value='reactivate' \r\n          onClick={reActivatePlant}\r\n        />\r\n        </div>\r\n      \r\n        </div>}\r\n     \r\n    </div>\r\n\r\n  );\r\n};\r\nAdmin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n  plants: state.plants\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser, logoutUser, getPlants}\r\n)(Admin);\r\n",["189","190"],{"ruleId":"191","severity":1,"message":"192","line":7,"column":10,"nodeType":"193","messageId":"194","endLine":7,"endColumn":22},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"191","severity":1,"message":"199","line":2,"column":8,"nodeType":"193","messageId":"194","endLine":2,"endColumn":11},{"ruleId":"191","severity":1,"message":"200","line":3,"column":17,"nodeType":"193","messageId":"194","endLine":3,"endColumn":26},{"ruleId":"191","severity":1,"message":"201","line":8,"column":8,"nodeType":"193","messageId":"194","endLine":8,"endColumn":18},{"ruleId":"191","severity":1,"message":"202","line":10,"column":8,"nodeType":"193","messageId":"194","endLine":10,"endColumn":13},{"ruleId":"191","severity":1,"message":"199","line":2,"column":8,"nodeType":"193","messageId":"194","endLine":2,"endColumn":11},{"ruleId":"191","severity":1,"message":"200","line":3,"column":17,"nodeType":"193","messageId":"194","endLine":3,"endColumn":26},{"ruleId":"191","severity":1,"message":"203","line":4,"column":27,"nodeType":"193","messageId":"194","endLine":4,"endColumn":33},{"ruleId":"191","severity":1,"message":"204","line":4,"column":35,"nodeType":"193","messageId":"194","endLine":4,"endColumn":40},{"ruleId":"191","severity":1,"message":"205","line":4,"column":42,"nodeType":"193","messageId":"194","endLine":4,"endColumn":48},{"ruleId":"191","severity":1,"message":"201","line":8,"column":8,"nodeType":"193","messageId":"194","endLine":8,"endColumn":18},{"ruleId":"195","replacedBy":"206"},{"ruleId":"197","replacedBy":"207"},{"ruleId":"191","severity":1,"message":"203","line":2,"column":27,"nodeType":"193","messageId":"194","endLine":2,"endColumn":33},{"ruleId":"191","severity":1,"message":"204","line":2,"column":35,"nodeType":"193","messageId":"194","endLine":2,"endColumn":40},{"ruleId":"191","severity":1,"message":"205","line":2,"column":42,"nodeType":"193","messageId":"194","endLine":2,"endColumn":48},{"ruleId":"208","severity":1,"message":"209","line":13,"column":9,"nodeType":"210","endLine":13,"endColumn":85},{"ruleId":"211","severity":1,"message":"212","line":3,"column":1,"nodeType":"213","endLine":57,"endColumn":3},{"ruleId":"191","severity":1,"message":"214","line":1,"column":16,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"195","replacedBy":"215"},{"ruleId":"197","replacedBy":"216"},{"ruleId":"208","severity":1,"message":"209","line":14,"column":3,"nodeType":"210","endLine":14,"endColumn":111},{"ruleId":"191","severity":1,"message":"200","line":3,"column":17,"nodeType":"193","messageId":"194","endLine":3,"endColumn":26},{"ruleId":"191","severity":1,"message":"214","line":3,"column":28,"nodeType":"193","messageId":"194","endLine":3,"endColumn":37},{"ruleId":"191","severity":1,"message":"217","line":4,"column":15,"nodeType":"193","messageId":"194","endLine":4,"endColumn":23},{"ruleId":"218","severity":1,"message":"219","line":38,"column":47,"nodeType":"220","messageId":"221","endLine":38,"endColumn":49},{"ruleId":"218","severity":1,"message":"219","line":55,"column":65,"nodeType":"220","messageId":"221","endLine":55,"endColumn":67},{"ruleId":"195","replacedBy":"222"},{"ruleId":"197","replacedBy":"223"},{"ruleId":"191","severity":1,"message":"199","line":1,"column":8,"nodeType":"193","messageId":"194","endLine":1,"endColumn":11},{"ruleId":"191","severity":1,"message":"224","line":4,"column":27,"nodeType":"193","messageId":"194","endLine":4,"endColumn":34},{"ruleId":"191","severity":1,"message":"225","line":5,"column":11,"nodeType":"193","messageId":"194","endLine":5,"endColumn":21},{"ruleId":"191","severity":1,"message":"203","line":5,"column":23,"nodeType":"193","messageId":"194","endLine":5,"endColumn":29},{"ruleId":"191","severity":1,"message":"217","line":5,"column":37,"nodeType":"193","messageId":"194","endLine":5,"endColumn":45},{"ruleId":"191","severity":1,"message":"226","line":11,"column":8,"nodeType":"193","messageId":"194","endLine":11,"endColumn":13},{"ruleId":"191","severity":1,"message":"227","line":13,"column":8,"nodeType":"193","messageId":"194","endLine":13,"endColumn":12},{"ruleId":"191","severity":1,"message":"228","line":16,"column":7,"nodeType":"193","messageId":"194","endLine":16,"endColumn":14},{"ruleId":"211","severity":1,"message":"212","line":17,"column":1,"nodeType":"213","endLine":17,"endColumn":34},{"ruleId":"211","severity":1,"message":"229","line":3,"column":1,"nodeType":"213","endLine":10,"endColumn":2},{"ruleId":"195","replacedBy":"230"},{"ruleId":"197","replacedBy":"231"},{"ruleId":"191","severity":1,"message":"232","line":152,"column":7,"nodeType":"193","messageId":"194","endLine":152,"endColumn":15},{"ruleId":"211","severity":1,"message":"229","line":23,"column":3,"nodeType":"213","endLine":71,"endColumn":4},{"ruleId":"195","replacedBy":"233"},{"ruleId":"197","replacedBy":"234"},{"ruleId":"195","replacedBy":"235"},{"ruleId":"197","replacedBy":"236"},{"ruleId":"211","severity":1,"message":"229","line":6,"column":1,"nodeType":"213","endLine":17,"endColumn":2},{"ruleId":"191","severity":1,"message":"237","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":13},{"ruleId":"191","severity":1,"message":"238","line":41,"column":9,"nodeType":"193","messageId":"194","endLine":41,"endColumn":23},{"ruleId":"191","severity":1,"message":"239","line":45,"column":10,"nodeType":"193","messageId":"194","endLine":45,"endColumn":19},{"ruleId":"191","severity":1,"message":"240","line":45,"column":21,"nodeType":"193","messageId":"194","endLine":45,"endColumn":39},{"ruleId":"191","severity":1,"message":"241","line":50,"column":12,"nodeType":"193","messageId":"194","endLine":50,"endColumn":23},{"ruleId":"191","severity":1,"message":"242","line":50,"column":25,"nodeType":"193","messageId":"194","endLine":50,"endColumn":39},{"ruleId":"243","severity":1,"message":"244","line":103,"column":3,"nodeType":"245","messageId":"246","endLine":145,"endColumn":4},{"ruleId":"195","replacedBy":"247"},{"ruleId":"197","replacedBy":"248"},"no-unused-vars","'confirmAlert' is defined but never used.","Identifier","unusedVar","no-native-reassign",["249"],"no-negated-in-lhs",["250"],"'API' is defined but never used.","'useEffect' is defined but never used.","'classnames' is defined but never used.","'store' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.",["249"],["250"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Component' is defined but never used.",["249"],["250"],"'Redirect' is defined but never used.","array-callback-return","Array.prototype.findIndex() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["249"],["250"],"'Context' is defined but never used.","'withRouter' is defined but never used.","'Popup' is defined but never used.","'Home' is defined but never used.","'history' is assigned a value but never used.","Unexpected default export of anonymous function",["249"],["250"],"'usertype' is assigned a value but never used.",["249"],["250"],["249"],["250"],"'fab' is defined but never used.","'selectedOption' is assigned a value but never used.","'plantList' is assigned a value but never used.","'updateAvailability' is assigned a value but never used.","'deactivated' is assigned a value but never used.","'setDeactivated' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["249"],["250"],"no-global-assign","no-unsafe-negation"]