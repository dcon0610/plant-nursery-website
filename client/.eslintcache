[{"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\App.js":"1","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Cart.js":"2","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\components\\linkCard\\index.js":"3","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Plants.js":"4","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Login.js":"5","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\utils\\GlobalState.js":"6","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Seeds.js":"7","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Register.js":"8","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Home.js":"9"},{"size":1190,"mtime":1610952348882,"results":"10","hashOfConfig":"11"},{"size":140,"mtime":1610941953977,"results":"12","hashOfConfig":"11"},{"size":701,"mtime":1610944502928,"results":"13","hashOfConfig":"11"},{"size":479,"mtime":1610968623743,"results":"14","hashOfConfig":"11"},{"size":143,"mtime":1610941933884,"results":"15","hashOfConfig":"11"},{"size":1942,"mtime":1610355751735,"results":"16","hashOfConfig":"11"},{"size":143,"mtime":1610941857212,"results":"17","hashOfConfig":"11"},{"size":152,"mtime":1610941892811,"results":"18","hashOfConfig":"11"},{"size":252,"mtime":1610943673122,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1v47yc4",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\App.js",[],["42","43"],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Cart.js",[],["44","45"],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\components\\linkCard\\index.js",["46"],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Plants.js",["47","48","49","50","51"],"\r\nimport API from \"../utils/API\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useStoreContext } from \"../utils/GlobalState\";\r\nimport { REMOVE_POST, UPDATE_POSTS, LOADING } from \"../utils/actions\";\r\n\r\n\r\nconst Plants = () => {\r\n\r\n  const Plants=2\r\n\r\n    API.getPlants()\r\n      .then(results => {\r\n      console.log(\"these are the results,\",results.data)\r\n      \r\n \r\n        });\r\n\r\n\r\n  return (\r\n    <div >\r\n     {Plants}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Plants;\r\n","C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Login.js",[],["52","53"],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\utils\\GlobalState.js",[],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Seeds.js",[],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Register.js",[],"C:\\bootcamp\\Project3\\plant-nursery-website\\client\\src\\pages\\Home.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":14,"column":9,"nodeType":"62","endLine":14,"endColumn":80},{"ruleId":"63","severity":1,"message":"64","line":3,"column":17,"nodeType":"65","messageId":"66","endLine":3,"endColumn":26},{"ruleId":"63","severity":1,"message":"67","line":4,"column":10,"nodeType":"65","messageId":"66","endLine":4,"endColumn":25},{"ruleId":"63","severity":1,"message":"68","line":5,"column":10,"nodeType":"65","messageId":"66","endLine":5,"endColumn":21},{"ruleId":"63","severity":1,"message":"69","line":5,"column":23,"nodeType":"65","messageId":"66","endLine":5,"endColumn":35},{"ruleId":"63","severity":1,"message":"70","line":5,"column":37,"nodeType":"65","messageId":"66","endLine":5,"endColumn":44},{"ruleId":"54","replacedBy":"71"},{"ruleId":"56","replacedBy":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],["73"],["74"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useStoreContext' is defined but never used.","'REMOVE_POST' is defined but never used.","'UPDATE_POSTS' is defined but never used.","'LOADING' is defined but never used.",["73"],["74"],"no-global-assign","no-unsafe-negation"]